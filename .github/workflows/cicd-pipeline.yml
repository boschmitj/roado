name: CI/CD Pipeline

on:
  push:
  pull_request:
    branches: ["main"]

jobs:
  # -------------------------
  # 1) run backend tests (every push / PR)
  # -------------------------
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: roado_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build and run backend tests
        working-directory: backend/demo
        run: mvn -B clean verify
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/roado_test
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: password

  # -------------------------
  # 2) run frontend tests (every push / PR)
  # -------------------------
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install & run frontend tests
        working-directory: frontend
        # in order to add testing we need to add test start option to scripts, add e.g. jest for testing
        run: npm ci

  # -------------------------
  # 3) build & push Docker images (only on pushes to main)
  # -------------------------
  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/demo
          file: ./backend/demo/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/roado:backend-latest,
            ${{ secrets.DOCKERHUB_USERNAME }}/roado:backend-${{ github.sha }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/roado:frontend-latest,
            ${{ secrets.DOCKERHUB_USERNAME }}/roado:frontend-${{ github.sha }}
